image: golang:latest

variables:
  REPO_NAME: gitlab.com/systemz/aimpanel2

# The problem is that to be able to use go get, one needs to put
# the repository in the $GOPATH. So for example if your gitlab domain
# is gitlab.com, and that your repository is namespace/project, and
# the default GOPATH being /go, then you'd need to have your
# repository in /go/src/gitlab.com/namespace/project
# Thus, making a symbolic link corrects this.
before_script:
  - mkdir -p $GOPATH/src/$(dirname $REPO_NAME)
  - ln -svf $CI_PROJECT_DIR $GOPATH/src/$REPO_NAME
  - cd $GOPATH/src/$REPO_NAME

stages:
    - test
    - build
    - build-docker
    - deploy

test-backend:
    stage: test
    script:
      - go get -u github.com/jstemmer/go-junit-report
      - cd master
      - go get
      - cd ..
      - cd slave
      - go get
      - go fmt $(go list ./... | grep -v /vendor/)
      - go vet $(go list ./... | grep -v /vendor/)
      - go test -race $(go list ./... | grep -v /vendor/)
      - go test -v 2>&1 | go-junit-report > $CI_PROJECT_DIR/report.xml
    artifacts:
      reports:
        junit: report.xml
    only:
      - master
      - merge_requests

compile-frontend:
    stage: build
    image: node:10-alpine
    script:
      - cd master-frontend
      - npm install &>/dev/null
      - npm run build
      - ls -alh dist
      - mv dist $CI_PROJECT_DIR/aimpanel-master-frontend
    cache:
      key: "$CI_JOB_NAME-$CI_COMMIT_REF_SLUG"
      paths:
        - master-frontend/node_modules
    artifacts:
      paths:
        - aimpanel-master-frontend
      expire_in: 1 month
#    only:
#      - master
#      - merge_requests

compile-backend:
    stage: build
    script:
      - cd ./master
      - go get
      # - go build -race -ldflags "-extldflags '-static'" -o $CI_PROJECT_DIR/aimpanel-master
      - CGO_ENABLED=0 go build -o $CI_PROJECT_DIR/aimpanel-master
      - cd ../slave
      - go get
      - CGO_ENABLED=0 go build -o $CI_PROJECT_DIR/aimpanel-slave
    artifacts:
      paths:
        - aimpanel-master
        - aimpanel-slave
      expire_in: 1 month
    only:
      - master
      - merge_requests

.build-frontend:
    stage: build-docker
    image: docker:stable
    services:
    - docker:stable-dind
    script:
    - docker login -u gitlab-ci-token -p $CI_JOB_TOKEN $CI_REGISTRY
    - docker build --tag $CI_REGISTRY_IMAGE/frontend:pipeline-$CI_PIPELINE_ID --tag $CI_REGISTRY_IMAGE/frontend:${CI_COMMIT_REF_SLUG}-latest -f frontend.Dockerfile .
    - docker push $CI_REGISTRY_IMAGE/frontend:pipeline-$CI_PIPELINE_ID
    - docker push $CI_REGISTRY_IMAGE/frontend:${CI_COMMIT_REF_SLUG}-latest
    only:
      - master
      - merge_requests

frontend:
  stage: build-docker
  image:
    name: gcr.io/kaniko-project/executor:debug
    entrypoint: [""]
  script:
    - echo "{\"auths\":{\"$CI_REGISTRY\":{\"username\":\"$CI_REGISTRY_USER\",\"password\":\"$CI_REGISTRY_PASSWORD\"}}}" > /kaniko/.docker/config.json
    - /kaniko/executor --context $CI_PROJECT_DIR --dockerfile $CI_PROJECT_DIR/frontend.Dockerfile --destination $CI_REGISTRY_IMAGE/frontend:pipeline-$CI_PIPELINE_ID
#  only:
#    - master
#    - merge_requests

build-master:
    stage: build-docker
    image: docker:stable
    services:
    - docker:stable-dind
    script:
    - docker login -u gitlab-ci-token -p $CI_JOB_TOKEN $CI_REGISTRY
    - docker build --tag $CI_REGISTRY_IMAGE/master:pipeline-$CI_PIPELINE_ID --tag $CI_REGISTRY_IMAGE/master:${CI_COMMIT_REF_SLUG}-latest -f master.Dockerfile .
    - docker push $CI_REGISTRY_IMAGE/master:pipeline-$CI_PIPELINE_ID
    - docker push $CI_REGISTRY_IMAGE/master:${CI_COMMIT_REF_SLUG}-latest
    only:
      - master
      - merge_requests

build-slave:
    stage: build-docker
    image: docker:stable
    services:
    - docker:stable-dind
    script:
    - docker login -u gitlab-ci-token -p $CI_JOB_TOKEN $CI_REGISTRY
    - docker build --tag $CI_REGISTRY_IMAGE/slave:pipeline-$CI_PIPELINE_ID --tag $CI_REGISTRY_IMAGE/slave:${CI_COMMIT_REF_SLUG}-latest -f slave.Dockerfile .
    - docker push $CI_REGISTRY_IMAGE/slave:pipeline-$CI_PIPELINE_ID
    - docker push $CI_REGISTRY_IMAGE/slave:${CI_COMMIT_REF_SLUG}-latest
    only:
      - master
      - merge_requests

.build-agent:
    stage: build-docker
    image: docker:stable
    services:
    - docker:stable-dind
    script:
    - docker login -u gitlab-ci-token -p $CI_JOB_TOKEN $CI_REGISTRY
    - docker build --tag $CI_REGISTRY_IMAGE/agent:pipeline-$CI_PIPELINE_ID --tag $CI_REGISTRY_IMAGE/agent:${CI_COMMIT_REF_SLUG}-latest -f agent.Dockerfile .
    - docker push $CI_REGISTRY_IMAGE/agent:pipeline-$CI_PIPELINE_ID
    - docker push $CI_REGISTRY_IMAGE/agent:${CI_COMMIT_REF_SLUG}-latest
    only:
      - master
      - merge_requests

k8s:
    stage: deploy
    image: alpine:latest
    script:
    - apk add --no-cache curl
    - curl -X POST -F token=$INFRA_TOKEN -F "ref=master" -F "variables[AIMPANEL_IMAGE]=pipeline-$CI_PIPELINE_ID" https://gitlab.com/api/v4/projects/6986946/trigger/pipeline
    only:
    - master