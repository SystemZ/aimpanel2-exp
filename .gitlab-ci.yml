stages:
    - compile
    - build
    - deploy

frontend:
    stage: compile
    image: node:10-alpine
    script:
    - cd master-frontend
    - apk add yarn
    - yarn install --frozen-lockfile
    - VUE_APP_API_URL=https://my-lab.aimpanel.pro yarn build
    - ls -alh dist
    - mv dist $CI_PROJECT_DIR/aimpanel-master-frontend
    cache:
      key: "$CI_JOB_NAME-yarn"
      paths:
        - ~/.cache
    artifacts:
      paths:
      - aimpanel-master-frontend
      expire_in: 1 month
    only:
    - master
    - merge_requests
    tags:
    - docker

backend:
    image: golang:latest
    stage: compile
    script:
    #- go build -race -ldflags "-extldflags '-static'" -o $CI_PROJECT_DIR/aimpanel-master
    #- go test -race $(go list ./... | grep -v /vendor/)
    - go fmt $(go list ./... | grep -v /src/) || true
    - go vet $(go list ./... | grep -v /src/)
    - CGO_ENABLED=0 go build -o $CI_PROJECT_DIR/aimpanel-master gitlab.com/systemz/aimpanel2/master
    - CGO_ENABLED=0 go build -o $CI_PROJECT_DIR/aimpanel-slave gitlab.com/systemz/aimpanel2/slave
    # generate RESTful API spec
    - go get github.com/go-swagger/go-swagger/cmd/swagger
    - bash Taskfile.sh swagger-gen
    # generate code report
    - go get github.com/jstemmer/go-junit-report
    - go test -v $(go list ./... | grep -v /src/) 2>&1 | go-junit-report > $CI_PROJECT_DIR/report.xml
    cache:
      key: "$CI_JOB_NAME-src"
      paths:
        - $GOPATH/src
    artifacts:
      # https://docs.gitlab.com/ee/ci/yaml/README.html#artifactsreportscodequality-starter
      reports:
        junit: report.xml
      paths:
      - aimpanel-master
      - aimpanel-slave
      - swagger.json
      - report.xml
      expire_in: 1 month
    only:
    - master
    - merge_requests
    tags:
    - docker

docker-images:
    stage: build
    image: docker:stable
    services:
    - docker:stable-dind
    script:
    - docker login -u gitlab-ci-token -p $CI_JOB_TOKEN $CI_REGISTRY
    - docker build --tag $CI_REGISTRY_IMAGE/frontend:pipeline-$CI_PIPELINE_ID -f frontend.Dockerfile .
    - docker push $CI_REGISTRY_IMAGE/frontend:pipeline-$CI_PIPELINE_ID
    - docker build --tag $CI_REGISTRY_IMAGE/master:pipeline-$CI_PIPELINE_ID -f master.Dockerfile .
    - docker push $CI_REGISTRY_IMAGE/master:pipeline-$CI_PIPELINE_ID
    - docker build --tag $CI_REGISTRY_IMAGE/slave:pipeline-$CI_PIPELINE_ID -f slave.Dockerfile .
    - docker push $CI_REGISTRY_IMAGE/slave:pipeline-$CI_PIPELINE_ID
    only:
    - master
    - merge_requests
    tags:
    - docker

deploy:
    stage: deploy
    image: alpine:latest
    script:
    - apk add --no-cache curl
    - curl -X POST -F token=$INFRA_TOKEN -F "ref=master" -F "variables[SERVICE_NAME]=aimpanel-lab" -F "variables[SERVICE_VERSION]=pipeline-$CI_PIPELINE_ID" https://gitlab.com/api/v4/projects/6986946/trigger/pipeline
    only:
    - master